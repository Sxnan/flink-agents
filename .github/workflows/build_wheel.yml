# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Build Wheel

on:
  workflow_dispatch:

jobs:
  lint:
    name: Code Style Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check License Header
        run: tools/check-license.sh
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"
      - name: Check code style
        run: ./tools/lint.sh -c

  java_tests:
    name: java tests on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ 'macos-latest', 'ubuntu-latest' ]
    steps:
      - uses: actions/checkout@v4
      - name: Install java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Run Java Tests
        run: tools/ut.sh -j

  python_tests:
    name: python tests on ${{ matrix.os }} ${{ matrix.python-version}}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ 'macos-latest', 'ubuntu-latest' ]
        python-version: [ '3.10', '3.11' ]
    steps:
      - uses: actions/checkout@v4
      - name: Install java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Install python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"
      - name: Run Python Tests
        run: tools/ut.sh -p

  e2e_tests:
    name: e2e tests on ${{ matrix.os }} ${{ matrix.python-version}}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ 'macos-latest', 'ubuntu-latest' ]
        python-version: [ '3.10', '3.11' ]
    steps:
      - uses: actions/checkout@v4
      - name: Install java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Install python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"
      - name: Build flink-agents
        run: bash tools/build.sh
      - name: Run e2e tests
        run: bash tools/e2e.sh

  build_python_wheels:
    name: "Build Python Wheels"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout the repository"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Install java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Install python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"
      - name: "Build python wheels"
        run: bash tools/build.sh
        env:
          # Skip -musllinux on Linux builds
          CIBW_SKIP: "*-musllinux*"
          # Use manylinux2014 on Linux
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_BEFORE_ALL_LINUX: pip install patchelf
          CIBW_BEFORE_BUILD_LINUX: pip install --upgrade pip && pip install --group python/pyproject.toml:dev
          CIBW_ENVIRONMENT_LINUX: CFLAGS="-I. -include ./dev/glibc_version_fix.h"
          # Run auditwheel repair on Linux
          CIBW_REPAIR_WHEEL_COMMAND_LINUX: "auditwheel repair -w {dest_dir} {wheel}"
      - name: "Upload python wheels"
        uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ github.run_number }}
          path: python/dist/**
